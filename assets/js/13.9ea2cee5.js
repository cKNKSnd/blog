(window.webpackJsonp=window.webpackJsonp||[]).push([[13],{445:function(t,a,n){"use strict";n.r(a);var s=n(10),e=Object(s.a)({},(function(){var t=this,a=t.$createElement,n=t._self._c||a;return n("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[n("p",[t._v("将项目生成的静态文件夹"),n("code",[t._v("dist")]),t._v("拷贝到服务器，使用Nginx作为web服务器")]),t._v(" "),n("p",[t._v("配置文件是 "),n("code",[t._v("/usr/local/nginx/conf/nginx.conf")])]),t._v(" "),n("p",[t._v("查找Nginx安装路径")]),t._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v("ps -ef | grep nginx\n# 这里获得的安装路径是 /usr/sbin/nginx\n")])])]),n("p",[t._v("获得安装路径后，查找配置文件路径")]),t._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v("/usr/sbin/nginx -t\n# 获得如下输出\nnginx: the configuration file /etc/nginx/nginx.conf syntax is ok\nnginx: configuration file /etc/nginx/nginx.conf test is successful\n")])])]),n("p",[t._v("配置Nginx")]),t._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v('#关键配置\nserver {\n    listen          80;\n    server_name     localhost;\n    \n    charset         utf-8\n    \n    location / {\n        root        /path/to/server/dist/directory;\n        index       index.html  index.htm;\n        # 防止刷新页面时出现404\n        try_files   $uri    $uri/   /index.html;\n    }\n    \n    # 前端请求接口\n    location /api {\n        # 后端服务器的ip和端口号\n        proxy_pass http://ip:port;\n        \n        # 重写Vue项目中配置的/api代理\n        rewrite "^/api/(.*)$" /$1 break;\n    }\n}\n')])])]),n("p",[t._v("配置完之后重启Nginx服务器")]),t._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v("/usr/sbin/nginx -s reload\n")])])]),n("h2",{attrs:{id:"vue项目配置nginx遇到的坑"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#vue项目配置nginx遇到的坑"}},[t._v("#")]),t._v(" Vue项目配置nginx遇到的坑")]),t._v(" "),n("p",[t._v("Vue项目中，在vue.config.js中为解决跨域问题配置了向后端请求的代理：")]),t._v(" "),n("div",{staticClass:"language-JavaScript extra-class"},[n("pre",{pre:!0,attrs:{class:"language-javascript"}},[n("code",[t._v("# vue"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("config"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("js 文件\nmodule"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("exports "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    devServer"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        port"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("5555")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        proxy"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"/api"')]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n                target"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"http://localhost:9090"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n                pathRewrite"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n                    "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"^/api"')]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('""')]),t._v("\n                "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n            "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),n("p",[t._v("这里配置了 "),n("code",[t._v("/api")]),t._v(" 代理访问到 "),n("code",[t._v("http://localhost:9090")])]),t._v(" "),n("p",[t._v("比如，我们真正要访问的接口是 "),n("code",[t._v("http://localhost:9090/category/list")]),t._v("，\n如果没有编写 "),n("code",[t._v("pathRewrite")]),t._v("，那么Vue会访问 "),n("code",[t._v("http://localhost:9090/api/category/list")]),t._v("。")]),t._v(" "),n("p",[n("strong",[t._v("在部署到nginx时，也需要进行代理地址重写")]),t._v("。")]),t._v(" "),n("h2",{attrs:{id:"nginx配置代理"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#nginx配置代理"}},[t._v("#")]),t._v(" Nginx配置代理")]),t._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v('    # 前端请求接口\n    location /api {\n        # 后端服务器的ip和端口号\n        proxy_pass http://ip:port;\n        \n        # 重写Vue项目中配置的/api代理\n        rewrite "^/api/(.*)$" /$1 break;\n    }\n')])])]),n("p",[n("strong",[t._v("proxy_pass")]),t._v("：反向代理，代理到指定的ip和端口")]),t._v(" "),n("p",[n("strong",[t._v("rewrite")]),t._v(" 代理地址重写")]),t._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v('rewrite "匹配路径的正则表达式"  重写后的路径 [指令];\n')])])]),n("p",[t._v("rewrite路径重写：")]),t._v(" "),n("ul",[n("li",[n("code",[t._v('"/api/(.*)$"')]),t._v(" 用了分组语法"),n("code",[t._v("(.*)")]),t._v("，把"),n("code",[t._v("/api")]),t._v("以后的部分当作一组。")]),t._v(" "),n("li",[n("code",[t._v("/$1")]),t._v(" 重写的匹配路径，"),n("code",[t._v("$1")]),t._v("引用前面正则表达式匹配到的分组（组编号从1开始也就是"),n("code",[t._v("/api")]),t._v("）,即"),n("code",[t._v("/api")]),t._v("后面的所有。这样的新路径就是除去"),n("code",[t._v("/api/")]),t._v("以外的所有，达到去除"),n("code",[t._v("/api")]),t._v("前缀的目的。")]),t._v(" "),n("li",[t._v("break: 指令。常用指令有两个：last、break\n"),n("ul",[n("li",[t._v("last: 重写路径结束后，将得到的路径重新进行一次路径匹配。")]),t._v(" "),n("li",[t._v("break：重写路径结束后，不重新进行路径匹配。")])])])]),t._v(" "),n("p",[n("strong",[t._v("参考:")]),t._v(" "),n("a",{attrs:{href:"https://blog.csdn.net/weixin_34267123/article/details/91504901?spm=1001.2101.3001.6650.1&utm_medium=distribute.pc_relevant.none-task-blog-2%7Edefault%7ECTRLIST%7Edefault-1.essearch_pc_relevant&depth_1-utm_source=distribute.pc_relevant.none-task-blog-2%7Edefault%7ECTRLIST%7Edefault-1.essearch_pc_relevant",target:"_blank",rel:"noopener noreferrer"}},[t._v("Nginx实现路径重写rewrite指令"),n("OutboundLink")],1)])])}),[],!1,null,null,null);a.default=e.exports}}]);